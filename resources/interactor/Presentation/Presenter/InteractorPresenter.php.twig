<?php
{{ include('header.twig') }}

    namespace {{ company }}\{{ project }}\Presentation\Presenter;


    use Conpago\Presentation\Contract\IJsonPresenter;
    use {{ company }}\{{ project }}\Business\Contract\Presenter\I{{ name }}Presenter;
{% if PresenterModel %}
    use {{ company }}\{{ project }}\Business\Contract\PresenterModel\I{{ name }}PresenterModel;
{% endif %}
{% if RequestDataValidator %}
    use {{ company }}\{{ project }}\Business\Contract\PresenterModel\I{{ name }}ValidationResult;
{% endif %}

    class {{ name }}Presenter implements I{{ name }}Presenter
    {
        const FAIL_MEESAGE = '?FAIL_MEESAGE?';
        const SUCCEED_MEESAGE = "?SUCCEED_MEESAGE?";

        /** @var IJsonPresenter */
        private $jsonPresenter;

        function __construct(IJsonPresenter $jsonPresenter)
        {
            $this->jsonPresenter = $jsonPresenter;
        }

{% if RequestDataValidator %}
        public function showValidationFailed(I{{ name }}ValidationResult $validationResult)
        {
            $data['success'] = false;
            //TODO: set validation output as bellow
            //$data['validation']['field'] = $validationResult->getFieldMessage();
            $data['message'] = self::FAIL_MEESAGE;
            $this->jsonPresenter->showJson($data);
        }

{% endif %}
        public function show{{ name }}Succeed({% if PresenterModel %}I{{ name }}PresenterModel $data{% endif %})
        {
            $jsonData['success'] = true;
            $jsonData['message'] = self::SUCCEED_MEESAGE;
{% if PresenterModel %}
            //TODO: set output as bellow
            $jsonData['entity']['field'] = $data->getField();
{% endif %}
            $this->jsonPresenter->showJson($jsonData);
        }

        public function showFailed($message)
        {
            $data['success'] = false;
            $data['message'] =  $message . ' ' . self::FAIL_MEESAGE;
            $this->jsonPresenter->showJson($data);
        }
    }